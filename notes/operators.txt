 Arithmetic Operators:
 =====================

+ (Addition): Adds two operands.
- (Subtraction): Subtracts the right operand from the left operand.
* (Multiplication): Multiplies two operands.
/ (Division): Divides the left operand by the right operand.
% (Modulus): Returns the remainder of the division of the left operand by the right operand.
** (Exponentiation): Raises the left operand to the power of the right operand.

2. Comparison Operators:
========================

== (Equal): Checks if two operands are equal in value, but not necessarily of the same type.
=== (Strict Equal): Checks if two operands are equal in value and type.
!= (Not Equal): Checks if two operands are not equal in value.
!== (Strict Not Equal): Checks if two operands are not equal in value or type.
> (Greater Than): Checks if the left operand is greater than the right operand.
< (Less Than): Checks if the left operand is less than the right operand.
>= (Greater Than or Equal): Checks if the left operand is greater than or equal to the right operand.
<= (Less Than or Equal): Checks if the left operand is less than or equal to the right operand.


3. Logical Operators:
======================

&& (Logical AND): Returns true if both operands are true.
|| (Logical OR): Returns true if at least one operand is true.
! (Logical NOT): Returns true if the operand is false and vice versa.

4. Assignment Operators:
=========================

= (Assignment): Assigns the value on the right to the variable on the left.
+=, -=, *=, /=, %= (Compound Assignment): Performs the corresponding arithmetic operation and assigns the result to the variable.

5. Unary Operators:
===================

+ (Unary Plus): Converts its operand to a number (or keeps it as a number if it already is).
- (Unary Minus): Negates its operand.
++ (Increment): Adds 1 to its operand.
-- (Decrement): Subtracts 1 from its operand.
typeof (Typeof): Returns a string indicating the type of the operand.
! (Logical NOT): Inverts the logical state of its operand.


6. Bitwise Operators:
=====================

& (Bitwise AND): Performs a bitwise AND operation.
| (Bitwise OR): Performs a bitwise OR operation.
^ (Bitwise XOR): Performs a bitwise XOR (exclusive OR) operation.
~ (Bitwise NOT): Inverts the bits of its operand.
<< (Left Shift): Shifts the bits of the left operand to the left by the number of positions specified by the right operand.
>> (Right Shift): Shifts the bits of the left operand to the right by the number of positions specified by the right operand.
>>> (Unsigned Right Shift): Shifts the bits of the left operand to the right by the number of positions specified by the right operand. 
    Fills with zeros from the left.

7. Conditional (Ternary) Operator:
==================================

? : (Conditional): Evaluates a condition and returns one of two values depending on whether the condition is true or false.
8. String Operators:
+ (String Concatenation): Concatenates two strings.
9. Miscellaneous Operators:
, (Comma): Separates expressions in a statement. Evaluates each expression and returns the value of the last one.